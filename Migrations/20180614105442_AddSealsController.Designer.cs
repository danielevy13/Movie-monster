// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MovieMansterWebApp.Models;

namespace MovieMansterWebApp.Migrations
{
    [DbContext(typeof(MovieMansterWebAppContext))]
    [Migration("20180614105442_AddSealsController")]
    partial class AddSealsController
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MovieMansterWebApp.Models.Customer", b =>
                {
                    b.Property<string>("CustomerID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("BirthDate");

                    b.Property<string>("FirstName");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasConversion(new ValueConverter<string, string>(v => default(string), v => default(string), new ConverterMappingHints(size: 1)));

                    b.Property<string>("LastName");

                    b.Property<string>("MailAddress");

                    b.Property<string>("Password");

                    b.Property<string>("PhoneNumber");

                    b.HasKey("CustomerID");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("MovieMansterWebApp.Models.Movie", b =>
                {
                    b.Property<int>("MovieID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Genere");

                    b.Property<string>("Language");

                    b.Property<int>("MinAge");

                    b.Property<DateTime>("ReleaseDate");

                    b.Property<int?>("SaleID");

                    b.Property<string>("Title");

                    b.Property<int>("UnitsInStock");

                    b.HasKey("MovieID");

                    b.HasIndex("SaleID");

                    b.ToTable("Movie");
                });

            modelBuilder.Entity("MovieMansterWebApp.Models.Sale", b =>
                {
                    b.Property<int>("SaleID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerID");

                    b.Property<string>("CustomerID1");

                    b.Property<bool>("Purchased");

                    b.Property<int>("TotalPrice");

                    b.HasKey("SaleID");

                    b.HasIndex("CustomerID1");

                    b.ToTable("Sale");
                });

            modelBuilder.Entity("MovieMansterWebApp.Models.Supplier", b =>
                {
                    b.Property<int>("SupplierID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MailAddress");

                    b.Property<int>("MyProperty");

                    b.Property<string>("Name");

                    b.Property<string>("PhoneNumber");

                    b.HasKey("SupplierID");

                    b.ToTable("Supplier");
                });

            modelBuilder.Entity("MovieMansterWebApp.Models.Movie", b =>
                {
                    b.HasOne("MovieMansterWebApp.Models.Sale")
                        .WithMany("Movies")
                        .HasForeignKey("SaleID");
                });

            modelBuilder.Entity("MovieMansterWebApp.Models.Sale", b =>
                {
                    b.HasOne("MovieMansterWebApp.Models.Customer", "Customer")
                        .WithMany("Sales")
                        .HasForeignKey("CustomerID1");
                });

            modelBuilder.Entity("MovieMansterWebApp.Models.Supplier", b =>
                {
                    b.OwnsOne("MovieMansterWebApp.ModelComponent.Address", "SupplierAddress", b1 =>
                        {
                            b1.Property<int>("SupplierID")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<int>("ApartmentNumber");

                            b1.Property<string>("City");

                            b1.Property<string>("State");

                            b1.Property<string>("StreetName");

                            b1.Property<int>("ZipCode");

                            b1.ToTable("Supplier");

                            b1.HasOne("MovieMansterWebApp.Models.Supplier")
                                .WithOne("SupplierAddress")
                                .HasForeignKey("MovieMansterWebApp.ModelComponent.Address", "SupplierID")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
