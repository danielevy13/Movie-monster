<head>
    <meta http-equiv="Content-type" content="text/html; charset=utf-8">
    <title>Movie Monster Statistics</title>
    <script type="text/javascript" src="https://mbostock.github.com/d3/d3.js?2.1.3"></script>


    <style type="text/css">
        .slice text {
            font-size: 16pt;
            font-family: Arial;
        }
    </style>
</head>

    <div1>
        <p style="font-size:45px; font-family:myFont;"> Statistics</p>
    </div1>

    <table align="left" style="background-color:rgba(255, 255, 255,0.8); border-radius:20px; position:center">
        <tbody>
            <tr>
                <th>Top Sellers</th>
                <th>Top Customers</th>
            </tr>
            <tr>
                <td id="pieChart" style="padding-left:70px; padding-top:50px;"></td>
                <td id="barChart" style="padding-right:50px;"></td>
            </tr>
        </tbody>
    </table>
        <script type="text/javascript">

            $.ajax({
                type: "POST",
                url: "/Sales/QuantityJson",
                dataType: 'json',
                success: function (response) {
                    var json = response;
                    console.log(json);
                    var w = 500,                        //width
                        h = 500,                            //height
                        r = 250,                            //radius
                        color = d3.scale.category20c();     //builtin range of colors

                    //Change the amount of data according to the DB size...
                    data = [{ "label": json[0].title, "value": json[0].quantity },
                    { "label": json[1].title, "value": json[1].quantity },
                    { "label": json[2].title, "value": json[2].quantity },
                    { "label": json[3].title, "value": json[3].quantity },
                        //{ "label": json[4].title, "value": json[4].quantity },
                        //{ "label": json[5].title, "value": json[5].quantity }
                    ];


                    var vis = d3.select("#pieChart")
                        .append("svg:svg")              //create the SVG element inside the <body>
                        .data([data])                   //associate our data with the document
                        .attr("width", w)           //set the width and height of our visualization (these will be attributes of the <svg> tag
                        .attr("height", h)
                        .append("svg:g")                //make a group to hold our pie chart
                        .attr("transform", "translate(" + r + "," + r + ")")    //move the center of the pie chart from 0, 0 to radius, radius
                    var arc = d3.svg.arc()              //this will create <path> elements for us using arc data
                        .outerRadius(r);
                    var pie = d3.layout.pie()           //this will create arc data for us given a list of values
                        .value(function (d) { return d.value; });    //we must tell it out to access the value of each element in our data array
                    var arcs = vis.selectAll("g.slice")     //this selects all <g> elements with class slice (there aren't any yet)
                        .data(pie)                          //associate the generated pie data (an array of arcs, each having startAngle, endAngle and value properties)
                        .enter()                            //this will create <g> elements for every "extra" data element that should be associated with a selection. The result is creating a <g> for every object in the data array
                        .append("svg:g")                //create a group to hold each slice (we will have a <path> and a <text> element associated with each slice)
                        .attr("class", "slice");    //allow us to style things in the slices (like text)
                    arcs.append("svg:path")
                        .attr("fill", function (d, i) { return color(i); }) //set the color for each slice to be chosen from the color function defined above
                        .attr("d", arc);                                    //this creates the actual SVG path using the associated data (pie) with the arc drawing function
                    arcs.append("svg:text")                                     //add a label to each slice
                        .attr("transform", function (d) {                    //set the label's origin to the center of the arc
                            //we have to make sure to set these before calling arc.centroid
                            d.innerRadius = 0;
                            d.outerRadius = r;
                            return "translate(" + arc.centroid(d) + ")";        //this gives us a pair of coordinates like [50, 50]
                        })
                        .attr("text-anchor", "middle")                          //center the text on it's origin
                        .text(function (d, i) { return data[i].label; });        //get the label from our original data array
                },
                error: function () {
                    alert("Error while inserting data");
                }
            });


            $.ajax({
                type: "POST",
                url: "/Customers/TopCustomers",
                success: function (res) {
                    console.log(res);

                    data = [{ "label": res[0].title, "value": res[0].quantity },
                    { "label": res[1].title, "value": res[1].quantity },
                    /*{ "label": res[2].title, "value": res[2].quantity }*/];

                    var margin = { top: 20, right: 20, bottom: 250, left: 40 },
                        width = 500 - margin.left - margin.right,
                        height = 500 - margin.top - margin.bottom;

                    // set the ranges
                    var x = d3.scale.ordinal().rangeRoundBands([0, width], .05);
                    var y = d3.scale.linear().range([height, 0]);

                    var xAxis = d3.svg.axis()
                        .scale(x)
                        .orient("bottom");

                    var yAxis = d3.svg.axis()
                        .scale(y)
                        .orient("left")
                        .ticks(10);

                    // add the SVG element
                    var svg = d3.select("#barChart").append("svg")
                        .attr("width", width + margin.left + margin.right)
                        .attr("height", height + margin.top + margin.bottom)
                        .append("g")
                        .attr("transform",
                            "translate(" + margin.left + "," + margin.top + ")");

                    // load the data
                    data.forEach(function (d) {
                        d.label = d.label;
                        d.value = +d.value;
                    });

                    // scale the range of the data
                    x.domain(data.map(function (d) { return d.label; }));
                    y.domain([0, d3.max(data, function (d) { return d.value; })]);

                    // add axis
                    svg.append("g")
                        .attr("class", "x axis")
                        .attr("transform", "translate(0," + height + ")")
                        .call(xAxis)
                        .selectAll("text")
                        .style("text-anchor", "end")
                        .attr("dx", "-.8em")
                        .attr("dy", "-.55em")
                        .attr("transform", "rotate(-45)");

                    svg.append("g")
                        .attr("class", "y axis")
                        .call(yAxis)
                        .append("text")
                        .attr("transform", "rotate(-45)")
                        .attr("y", 5)
                        .attr("dy", ".71em")
                        .style("text-anchor", "end")
                        .text("Value");

                    // Add bar chart
                    svg.selectAll("bar")
                        .data(data)
                        .enter().append("rect")
                        .attr("class", "bar")
                        .attr("x", function (d) { return x(d.label); })
                        .attr("width", x.rangeBand())
                        .attr("y", function (d) { return y(d.value); })
                        .attr("height", function (d) { return height - y(d.value); });
                }
            });

        </script>

        </div>
</html>